<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.niit.service.member.dao.SkMemberNotificationOpsMapper" >
  <resultMap id="BaseResultMap" type="com.niit.service.member.pojo.SkMemberNotificationOps" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="notice_time" property="noticeTime" jdbcType="TIMESTAMP" />
    <result column="project_id" property="projectId" jdbcType="INTEGER" />
    <result column="operation" property="operation" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, user_name, notice_time, project_id, operation, status
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from sk_member_notification_ops
    where id = #{id,jdbcType=INTEGER}
  </select>
  <!--查找所有项目的所有通知-->
  <select id="selectAll" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
        sk_member_notification_ops.id,
		sk_member_notification_ops.user_id,
		sk_member_notification_ops.user_name,
		sk_member_notification_ops.notice_time,
		sk_member_notification_ops.project_id,
		sk_member_notification_ops.operation,
		sk_member_notification_ops.status,
		title
    from  sk_member_notification_ops LEFT JOIN sk_project ON sk_member_notification_ops.project_id=sk_project.id
    where project_id IN (
    SELECT id FROM sk_project WHERE user_id=#{userId,jdbcType=INTEGER}
    )
    order by sk_member_notification_ops.notice_time desc
  </select>
  <!--删除通知-->
  <delete id="deleteNotification">
    delete from sk_member_notification_ops
    where user_id = #{user_id} and project_id = #{project_id} and operation = #{operation}
  </delete>

  <!--删除通知-->
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sk_member_notification_ops
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <!--添加用户通知,防止重复插入-->
  <insert id="insert" parameterType="com.niit.service.member.pojo.SkMemberNotificationOps" >
    insert into sk_member_notification_ops (user_id,user_name,notice_time,project_id,operation,status)
      SELECT #{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR},
      #{noticeTime,jdbcType=TIMESTAMP}, #{projectId,jdbcType=INTEGER}, #{operation,jdbcType=INTEGER},
      #{status,jdbcType=INTEGER}
    FROM DUAL
    WHERE  NOT EXISTS (
        SELECT * FROM sk_member_notification_ops
        WHERE user_id = #{userId,jdbcType=INTEGER}
          AND project_id = #{projectId,jdbcType=INTEGER}
          and operation = #{operation,jdbcType=INTEGER})
  </insert>
  <!--添加一条用户通知-->
  <insert id="insertSelective" parameterType="com.niit.service.member.pojo.SkMemberNotificationOps" >
    insert into sk_member_notification_ops
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="noticeTime != null" >
        notice_time,
      </if>
      <if test="projectId != null" >
        project_id,
      </if>
      <if test="operation != null" >
        operation,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="noticeTime != null" >
        #{noticeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="projectId != null" >
        #{projectId,jdbcType=INTEGER},
      </if>
      <if test="operation != null" >
        #{operation,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.niit.service.member.pojo.SkMemberNotificationOps" >
    update sk_member_notification_ops
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="noticeTime != null" >
        notice_time = #{noticeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="projectId != null" >
        project_id = #{projectId,jdbcType=INTEGER},
      </if>
      <if test="operation != null" >
        operation = #{operation,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.niit.service.member.pojo.SkMemberNotificationOps" >
    update sk_member_notification_ops
    set user_id = #{userId,jdbcType=INTEGER},
      user_name = #{userName,jdbcType=VARCHAR},
      notice_time = #{noticeTime,jdbcType=TIMESTAMP},
      project_id = #{projectId,jdbcType=INTEGER},
      operation = #{operation,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>